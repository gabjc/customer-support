name: Deploy Next.js application

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env echo "SITE_URL=${{ secrets.SITE_URL }}" > .env

      - name: build docker image
        run: docker build -t lucasfranco12/ranger_chatbot .
      
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish image to docker hub
        run: docker push lucasfranco12/ranger_chatbot:latest

    deploy: 
      needs: build
      runs-on: self-hosted
      steps:
        - name: Pull image from docker hub
          run: docker pull lucasfranco12/ranger_chatbot:latest

        - name: Delete old container
          run: docker rm -f ranger_chatbot-container

        - name: Run docker container
          run: docker run -d -p 3000:3000 --name ranger_chatbot-container lucasfranco12/ranger_chatbot

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Log in to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build and push Docker image
      #   id: build-image
      #   run: |
      #     docker build -t your-repo-name/your-app-name .
      #     docker tag your-repo-name/your-app-name:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-repo-name/your-app-name:latest
      #     docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-repo-name/your-app-name:latest

      # - name: Deploy to EC2
      #   uses: appleboy/ssh-action@v0.1.0
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-repo-name/your-app-name:latest
      #       docker stop your-container-name || true
      #       docker rm your-container-name || true
      #       docker run -d -p 80:3000 --name your-container-name \
      #         -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
      #         ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-repo-name/your-app-name:latest
